1. 列表（List）
列表是：有序序列的一种，储存各种数据类型的作用，而且有index（下标值）
特征：用[]和数值以及逗号隔开的序列，就是列表，里面都是数值可以相同数值，下标值是不一样的
命名规范：列表需要符合标识符
第二个：小驼峰法起名
第三个：不能用list这个名字，list是内置函数，可以把其他类型转换列表类型
list[]转换为列表
例；
list=[1,2,3,4,5,5,4,5,6]
list=[1,True,1.0,"123",[1,2,3,4]]
print(list)
结果：
[1, True, 1.0, '123', [1, 2, 3, 4]]

1.2 列表的特性：
列表里面的数值是可以修改的。   补充：字符串数值是不能修改的
1.2.1 创建list列表
li就是名字，就是想用什么来命名就是什么
li = []#这个是空列表
print(li)
print(type(li))
结果：
[]
<class 'list'>

li = [1,True,1.0,"123",[1,2,3,4]]
print(li)
print(type(li))
结果：
[1, True, 1.0, '123', [1, 2, 3, 4]]
<class 'list'>

1.3 列表的操作（增删改查）
1.3.1 列表切片与长度函数
凡是有序序列第一种，会继承（包含）有序序列的所有方法和属性
逗号仅仅是隔开的意思，没有占用下标值
a = [1, 2, 3, 4, 5, 6, 7, 8]
输出偶数：
print(a[1::2])
print(a[1:9:2])
print(a[-1::-2])
print(len(a))
结果：
[2, 4, 6, 8]
[2, 4, 6, 8]
[8, 6, 4, 2]
8

1.3.2                                  查
1.3.2.¹         列表查询：统计数值在列表的个数，看这个数值在列表里面有多少个
                格式：列表名.count(数值)
例：数值1在列表里面有多少个
a = [1,1,2,3,3,4,5,23]
print(a.count(1))
print(a.count(68))
结果：
2
0

a = ["1", "1", "2"]
print(a.count("1"))
结果：
2

1.3.2.²         下标值查询：知道一个数值，但是不知道这个数值在列表的哪一个地方，
                格式：列表名.index(数值)
从左往右查询，匹配到一个数值就会输出改数值的下标值，然后停止查询
如果在列表遇到相同的多个数值，只会查询最左边的那一个
例：
a = [1,2,3,1,2,3,4]
print(a.index(3))
结果：
2
print(a.index(5)) #报错提示不在列表里面
结果：5 is not in list

1.3.2.³ 成员运算符：in 与 not in
in 和 not in 是符号，不需要双引号
例：输出bool值
a = [1,2,3,1,2,3]
print(1 in a)
print(1 not in a)


1.3.3                                  增
1.3.3.¹         append(数值)：追加    在列表末尾追加一个数值      只能追加一个数值，一个个追加
                格式：列表名.append(数值)
append不需要打印
在列表不要写成print(a.append(4))
例：
a = [1,2,3]
a.append(4)
print(a)
结果：
[1, 2, 3, 4]

1.3.3.²         insert()：插入       特定数值插入到指定的下标值位置插队   不能组团插队：一个个插队
                格式：列表名.insert(下标值，数值)
上面填写的下标值就是你要插入的下标值位置
例：
a = [1,2,4]
# i=》【1,2,3,4】
a.insert(2, 3)
print(a)
a.insert(0, 0)
print(a)
结果：
[1, 2, 3, 4]
[0, 1, 2, 3, 4]

拓展：如果插入的位置下标值大于列表长度，默认最后一位
a.insert(100, 5)
print(a)
结果：
[0, 1, 2, 3, 4, 5]

1.3.3.³         extend()：后续添加     可以按照添加序列逐个添加到目标列表末尾   实现多个数值同时添加到末尾，括号里面只需要一个有序序列
                格式：列表名.extend(有序序列)
例：
a = [1,78,65,24,14,5]
a.extend([6,7])
print(a)
结果：
[1, 78, 65, 24, 14, 5, 6, 7]

1.3.4                                 删
1.3.4.¹ pop()：  是识别删除的列表下标值，通过下标值去删除数值，如果没有写下标值，默认删除最后一个
                格式：列表名.pop(下标值)
例：
a = [1,2,3,4,5]
a.pop()#没有写下标值，默认删除最后一个
print(a)
结果：
[1, 2, 3, 4]

a.pop(2)
print(a)
结果：
[1, 2, 4, 5]

a.pop(10000)
print(a)
报错：pop index out of range

1.3.4.²         remove()：是移除的意思，就是移除特定值
                格式：列表名.remove(数值)
其中：如果有多个数值相同，也是从左往右匹配移除，只移除最左边一个
例：
a = [1,2,3,4,1,2,3,4]
a.remove(2)
print(a)
结果：
[1, 3, 4, 1, 2, 3, 4]

移除一个不存在的数值，会报not in list
a.remove(1000)
print(a)

1.3.4.³         del：是关键字，没有（）  可以删除任意代码的数值（包括变量值）   函数，类···
                作用：删除一个或者多个数值，或者物理删除
格式：
del 序列名[切片]   删除数值,删除查询结果，切片结果
del 序列名        物理删除，就是不存在，再次使用报错，找不到的报错
例：
a = [1,2,3,1,2,3,1,2,3]
del a[2]
print(a)
del a[1::2]
print(a)
结果：
[1, 2, 1, 2, 3, 1, 2, 3]
[1, 1, 3, 2]
再次使用：
del a
print(a)
结果：name 'i' is not defined

1.3.4.⁴ clear()  清空所有值
格式：列表名.clear()  不需要填写数值
例：
a = [1,2,3,4,5,6]
a.clear()
print(a)
结果：
[]


1.3.5 列表更改（替换）                    改
格式：列表名[下标值] = 数值
根据下标值更改数值
例：
a = [1,2,3,3,5]
a[3] = 4
print(a)
结果：
[1, 2, 3, 4, 5]


1.3.6列表嵌套与取值(难点)  剥皮
例：
a = [[1,2,3],[4,5,6]]
取数字 4
print(a[1])      #第一步
print(a[1][0])   #第二步
print(type(a))
取数字 5
print(a[1])      #第一步
print(a[1][1])   #第二步

取字符 "2"
a = [[["123"],["456"]]]
print(a[0])             #从最外层[]打开
print(a[0][0])          #从次外层[打开]
print(a[0][0][0])       #从["123"],["456"]剥离【


print(a[0][0][0][1])    #从"123"剥离
print(type(a[0][0][0][1]))

练习：
a = [[[[[123,4,"79"],["53",56,"111"],["kk","jj","kfc"],[5.3,66.89,999.87]]]]]
#取str kk
print(a[0][0][0][2][0])
#取int 4
print(a[0][0][0][0][1])
#取flot 66.89
print(a[0][0][0][3][1])


                                        增加：
append(数值)追加到末尾
insert(下标值，数值) 按照填写的下标值插入特定的数值
extend(有序序列)
按照序列的顺序，从左往右依次添加到目标列表末尾

                                          删除：
pop(下标值)
删除下标值的数值，如果不填写默认最后一个，如果超过最大下标值会报错

remove(数值)
移除特定值，如果有相同的数值，删除最左边的数值，如果没有该数值，会报错

del 序列名
物理删除，如果再次使用会直接报错
del 切片
删除切片出来的结果

clear()
清空列表数值

                                          修改：
列表名[下标值] = 数值

                                          查询：
index(数值)
查询下标值，如果遇到先相同的数值，只查询最左边的下标值，没有数值报错
例：
a = [1,2,3,4,5,6]
print(a.index(4))
结果：
3

count(数值)
统计数值在列表的个数，如果没有数值，0
列表[下标值]
查询数值
例：
a = [1,2,3,4,4,4,4,4,45,6]
print(a.count(4))
结果：
5

                                            元组：
特征：不能修改数值，没增删改
元组拼接：+
元组删除：物理删除
del + 元组名
元组和列表的互相转换: tuple()

列表用[], 元组用()

创建一个空元组：
a =()
创建一个单个元组：
a = (a,)



作业：
1.创建一个空列表li，在里面添加姓名，年龄，身高

list = []
print(list)
list = ["名字：kk","年龄：18","身高：2.3"]
print(list)

2.在列表li中，身高前面插入出生日期，在身高后面插入家庭地址

list.insert(2,"出生日期：1949.10.1")
list.insert(4,"中华人民共和国")
print(list)

3.查询列表li是否有包含出生日期

print("出生日期：1949.10.1" in list)

4.把列表li中的出生日期和家庭地址删除

list.pop(2)
list.pop(3)
print(list)
list.remove('身高：2.3')
list.remove('年龄：18')
list.remove('名字：kk')

5.清空列表li的数值，清空后删除列表

del list
print(list)


